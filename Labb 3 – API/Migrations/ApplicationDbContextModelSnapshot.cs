// <auto-generated />
using Labb_3___API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_3___API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb_3___API.Models.Intresse", b =>
                {
                    b.Property<int>("IntresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntresseId"));

                    b.Property<string>("Beskrivning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntresseId");

                    b.ToTable("Intressen");
                });

            modelBuilder.Entity("Labb_3___API.Models.IntressePerson", b =>
                {
                    b.Property<int>("IntressePersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IntressePersonId"));

                    b.Property<int>("FkIntresseId")
                        .HasColumnType("int");

                    b.Property<int>("FkPersonId")
                        .HasColumnType("int");

                    b.HasKey("IntressePersonId");

                    b.HasIndex("FkIntresseId");

                    b.HasIndex("FkPersonId");

                    b.ToTable("Intresset");
                });

            modelBuilder.Entity("Labb_3___API.Models.Länk", b =>
                {
                    b.Property<int>("LänkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LänkId"));

                    b.Property<int>("FkIntresseId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LänkId");

                    b.HasIndex("FkIntresseId");

                    b.ToTable("Länkar");
                });

            modelBuilder.Entity("Labb_3___API.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("PersonNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Personer");
                });

            modelBuilder.Entity("Labb_3___API.Models.IntressePerson", b =>
                {
                    b.HasOne("Labb_3___API.Models.Intresse", "Intresse")
                        .WithMany("Intresset")
                        .HasForeignKey("FkIntresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3___API.Models.Person", "Person")
                        .WithMany("Intresset")
                        .HasForeignKey("FkPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intresse");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Labb_3___API.Models.Länk", b =>
                {
                    b.HasOne("Labb_3___API.Models.Intresse", "Intresse")
                        .WithMany()
                        .HasForeignKey("FkIntresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intresse");
                });

            modelBuilder.Entity("Labb_3___API.Models.Intresse", b =>
                {
                    b.Navigation("Intresset");
                });

            modelBuilder.Entity("Labb_3___API.Models.Person", b =>
                {
                    b.Navigation("Intresset");
                });
#pragma warning restore 612, 618
        }
    }
}
